//Program to copy all elements of one array into another array
//In this program, we need to copy all the elements of one array into another. This can be accomplished by looping through the first array and store the elements of the first array into the second array at the corresponding position.
Solution:
//Method 1
/*public class Main {

	public static void main(String[] args) {
		int original[]= {2,3,34,90,8};
		int Copy[]=original;
		System.out.println("Original Array is:");
		for(int i=0;i<original.length;i++) {
			System.out.print(original[i]+" ");
		}
		System.out.println();
		System.out.println("Copy array is:");
		for(int i=0;i<Copy.length;i++) {
			System.out.print(Copy[i]+" ");
		}

	}

}*/
//Method2 
public class Main {

	public static void main(String[] args) {
		int original[]= {2,3,34,90,8};
		int Copy[]=new int[original.length];
		System.out.println("Original Array is:");
		for(int i=0;i<original.length;i++) {
			Copy[i]=original[i];
		}
		for(int i=0;i<original.length;i++) {
			System.out.print(original[i]+" ");
		}
		System.out.println();
		System.out.println("Copy array is:");
		for(int i=0;i<Copy.length;i++) {
			System.out.print(Copy[i]+" ");
		}

	}

}
2)In this program, we have an array of elements to count the occurrence of its each element. One of the approaches to resolve this problem is to maintain one array to store the counts of each element of the array. Loop through the array and count the occurrence of each element as frequency and store it in another array fr.
1    2   8  3   2   2   2   5   1  
In the given array, 1 has appeared two times so its frequency be 2 and 2 has appeared four times so have frequency 4 and so on.
sol):
import java.util.HashMap;
import java.util.Map;
public class FrequencyElements {
	public static void main(String[] args) {
		int arr[]= {1,4,5,9,7,7,1,4,5};
		HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();
		for(int i=0;i<arr.length;i++) {
			if(hm.containsKey(arr[i])) {
				hm.put(arr[i],hm.get(arr[i])+1);
			}
			else {
				hm.put(arr[i],1);
			}
		}
		for(Map.Entry entry:hm.entrySet()) {
			System.out.println("Elements | Frequency");
			System.out.println(entry.getKey()+"          "+entry.getValue());
		}
	}
}
3)Program to left rotate the elements of an array
solution:
import java.util.Scanner;
public class Leftarrayrotate {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        int[] a = new int[size];
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            a[i] = scanner.nextInt();
        }
        System.out.println("Enter the number of positions to rotate left: ");
        int n = scanner.nextInt();
		for(int i=0;i<n;i++) {
			int temp,j;
			temp=a[0];
			for(j=0;j<a.length-1;j++) {
				a[j]=a[j+1];
			}
			a[a.length-1]=temp;
		}
		System.out.println("After Array rotation to left");
		for(int i=0;i<a.length;i++) {
			System.out.print(a[i]+" ");
		}
	}

}
4)Proam to print the duplicate elements of an array
solution:
Method1: using collections:
import java.util.HashSet;//It is used to remove duplicates in an array
import java.util.Set;
public class DuplicatesandremoveDuplicates {
	public static void main(String[] args) {
		//int a[]= {1,2,32,2,4,8,2,1,8};
		String a[]= {"Java","java","Hello","Hello","Java"};
		Set<String> uset=new HashSet<String>();
		Set<String> dupset=new HashSet<String>();
		for(String val:a) {
		if(!uset.add(val)){
		    dupset.add(val);
			//uset.add(val);
		}
	}
		System.out.println(uset);
		System.out.print(dupset);
	}
}
Method2:
import java.util.Scanner;
public class DuplicatesandremoveDuplicates {  
public static void main(String[] args) { 
	Scanner scan=new Scanner(System.in);
        //Initialize array  
        //int [] arr ={1, 2, 3, 4, 2, 7, 8, 8, 3};
	System.out.print("Enter size of an array: ");
	int size=scan.nextInt();
	System.out.print("Enter the elements of an array: ");
	int a[]=new int[size];
	for(int i=0;i<a.length;i++) {
		a[i]=scan.nextInt();
	}
	System.out.println("Duplicate elements in given array: ");  
        //Searches for duplicate element  
        for(int i = 0; i < a.length; i++) {  
            for(int j = i + 1; j < a.length; j++) {  
                if(a[i] == a[j])  
                    System.out.println(a[j]);  
            }  
        }  
    }  
} 
5)Program to print the elements of an array in reverse order
solution:)
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	  Scanner sc=new Scanner(System.in);
	  System.out.print("Enter the size of an array:");
	  int n=sc.nextInt();
	  System.out.print("Enter elements of an array:");
	  int a[]=new int[n];
	  for(int i=0;i<n;i++){
	      a[i]=sc.nextInt();
	  }
	  System.out.print("Original array elements are:");
	  for(int i=0;i<n;i++){
	      System.out.print(a[i]+" ");
	  }
	  System.out.println();
	  System.out.print("Reverse array elements are:");
	  for(int i=n-1;i>=0;i--){
	      System.out.print(a[i]+" ");
	  }
	  
	}
}
6)Program to print the elements of an array present on even position
solution:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int a[]={1,2,3,4,5};
	    for(int i=1;i<a.length;i+=2){
	        System.out.print(a[i]+" ");
	    }
	    
		
	}
}
Meethod2:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int a[]={1,2,3,4,5};
	    for(int i=0;i<a.length;i++){
	        if(a[i]%2==0){
	            System.out.println("Index "+i+":"+a[i]);
	        }
	    }
	    
		
	}
}
7)Program to print the elements of an array present on odd position
solution:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int a[]={1,2,3,4,5};
	    for(int i=0;i<a.length;i++){
	        if(a[i]%2!=0){
	            System.out.println("Index "+i+":"+a[i]);
	        }
	    }
	    
		
	}
}
Method2:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int a[]={1,2,3,4,5};
	    for(int i=0;i<a.length;i+=2){
	        System.out.print(a[i]+" ");
	    }
	    
		
	}
}
8)Program to print the largest element in an array
solution:
class Main{
    public static void main (String[] args) {
        int a[]={23,76,42,90,86};
        int max=a[0];
        for(int i=1;i<a.length;i++){
            if(a[i]>max){
                max=a[i];
            }
        }
        System.out.println("Largest element in the given array ELements:"+max);
    }
}
9)Program to print the smallest element in an array 
solution:
class Main{
    public static void main (String[] args) {
        int a[]={23,76,42,90,86};
        int max=a[0];
        for(int i=1;i<a.length;i++){
            if(a[i]<max){
                max=a[i];
            }
        }
        System.out.println("Largest element in the given array ELements:"+max);
    }
}
10)Java Program to print the number of elements present in an array
solution:
import java.util.Scanner;
public class ElementCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
         // Input the size of the array
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        // Create an array of given size
        int[] array = new int[size];
         // Input array elements
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
     // Print the number of elements in the array
        System.out.println("Number of elements in the array: " + array.length);
   }
}
11)Java Program to print the sum of all the items of the array
solution:
public class SumOfArray {  
    public static void main(String[] args) {  
        //Initialize array  
        int [] arr = new int [] {1, 2, 3, 4, 5};  
        int sum = 0;  
        //Loop through the array to calculate sum of elements  
        for (int i = 0; i < arr.length; i++) {  
           sum = sum + arr[i];  
        }  
        System.out.println("Sum of all the elements of an array: " + sum);  
    }  
}  




