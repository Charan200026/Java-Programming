1)Java Program to count the total number of characters in a string
solution:
import java.util.Scanner;
public class CharacterCount {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter a string:");
        String inputString = scanner.nextLine();
        int charCount = 0;
        for (int i = 0; i < inputString.length(); i++) {
            if (inputString.charAt(i) != ' ') { // Exclude spaces from counting
                charCount++;
            }
        }
         System.out.println("Total number of characters in the string: " + charCount);
        }
}
2)Java Program to Count the Total Number of Punctuation Characters Exists in a String
solu:
import java.util.Scanner;
class Main{
    public static void main (String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the String");
        String s=sc.nextLine();
        int count=0;
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(isPunctuate(ch)){
                count++;
            }
        }
        System.out.println("Total no of punctuations are:"+count);
    }
    public static boolean isPunctuate(char ch){
        return (ch == '!' || ch == '\"' || ch == '#' || ch == '$' || ch == '%' || ch == '&' || 
                ch == '\'' || ch == '(' || ch == ')' || ch == '*' || ch == '+' || ch == ',' || 
                ch == '-' || ch == '.' || ch == '/' || ch == ':' || ch == ';' || ch == '<' || 
                ch == '=' || ch == '>' || ch == '?' || ch == '@' || ch == '[' || ch == '\\' || 
                ch == ']' || ch == '^' || ch == '_' || ch == '`' || ch == '{' || ch == '|' || 
                ch == '}' || ch == '~');
    }
    
}
3)Java Program to count the total number of vowels and consonants in a string
sol:
import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner scan=new Scanner(System.in);
		System.out.println("Enter the String");
		String s=scan.nextLine().toLowerCase();
		int vowels=0;
		int consonants=0;
		for(int i=0;i<s.length();i++) {
			char ch=s.charAt(i);
			if(Character.isLetter(ch)) {
				if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u') {
				vowels++;
				}
				else{
				consonants++;
			}
		}
	  }
		System.out.println("Total no of vowels:"+vowels);
		System.out.println("Total no of Consonants:"+consonants);
  }
}
4)Java Program to determine whether two strings are the anagram
sol:
import java.util.*;
public class Anagram {
	public static boolean isAnagram(String str1,String str2) {
		str1=str1.replaceAll("\\s","").toLowerCase();
		str2=str2.replaceAll("\\s","").toLowerCase();
		if(str1.length()!=str2.length()) {
			return false;
		}
		char[] ch1=str1.toCharArray();
		char[] ch2=str2.toCharArray();
		Arrays.sort(ch1);
		Arrays.sort(ch2);
		return Arrays.equals(ch1, ch2);
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the First String");
		String str1=sc.next();
		System.out.println("Enter the Second String");
		String str2=sc.next();
		boolean isAnagram=isAnagram(str1, str2);
		boolean samecharacters=str1.equalsIgnoreCase(str2);
		if(isAnagram&&!samecharacters){
			System.out.println("Anagram");
		}else {
			System.out.println("Not a Anagram");
		}
	}
}
5)Java Program to divide a string in 'N' equal parts
sol:
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the string:");
        String input = scanner.nextLine();
        System.out.println("Enter the number of parts to divide the string into:");
        int parts = scanner.nextInt();
        if (input.length() % parts != 0) {
            System.out.println("Cannot divide the string into equal parts.");
            return;
        }
        int partLength = input.length() / parts;
        int startIndex = 0;
        int endIndex = partLength;
        System.out.println("Dividing the string into " + parts + " equal parts:");
        for (int i = 0; i < parts; i++) {
            String part = input.substring(startIndex, endIndex);
            System.out.println("Part " + (i + 1) + ": " + part);
            startIndex = endIndex;
            endIndex += partLength;
        }
    }
}

